#!/usr/bin/env ruby
require 'pry'
require 'fileutils'
require 'open-uri'
require 'colorize'

include FileUtils

project_name = ARGV[0]

# make app repo
mkdir(project_name)

# and do all the work there...
cd(project_name) do

  # assets
  folders = %w(
    controllers
    db
    helpers
    public
    public/images
    public/stylesheets
    views
    spec
    models
    views/resource1
    config
  )

  makedirs(folders)

    File.open('db/schema.sql', 'w+') do |f|
    f.write <<SCHEMA
SCHEMA
  end

#boot.rb
    File.open('config/boot.rb', 'w+') do |f|
    f.write <<BOOT
    Dir["./models"]
     DB = Sequel.connect("postgres://localhost:5432/sample_app_development") 
Dir[".helpers/*.rb"].each do 
BOOT
  end

# application_controller.rb
    File.open('controllers/application_controller.rb', 'w+') do |f|
    f.write <<APPLICATION_CONTROLLER

    set :root, File.join(File.dirname(__FILE__), '..')
    set :views, Proc.new { File.join(root, "views") }
APPLICATION_CONTROLLER
  end

# seeds.rb
    File.open('db/seeds.rb', 'w+') do |f|
    f.write <<SEEDS
SEEDS
  end

#application_helper.rb
      File.open('helpers/application_helper.rb', 'w+') do |f|
      f.write <<APPLICATION_HELPER
    ########################
    # Configuration
    ########################
    # allow put/delete forms in browsers that don't support it.
    enable :method_override
    # store data between HTTP requests in a cookie
    enable :sessions
    # session_secret will change with every start of the application
    # if we want to run shotgun, which creates new application instances
    # we must manually set session_secret
    set :session_secret, 'super secret'

    configure :test, :development do
      $redis = Redis.new
      # DB = Sequel.connect("postgres://localhost/dvr_development")

    end
    configure :production do
      uri = URI.parse(ENV['REDISTOGO_URL'])
      $redis = Redis.new({:host => uri.host,
                          :port => uri.port,
                          :password => uri.password})
    end
APPLICATION_HELPER
  end

  # .rspec
  File.open('.rspec', 'w+') do |f|
    f.write <<RSPEC
--color
--format documentation
--require spec_helper
RSPEC
  end

  # spec_helper.rb
  File.open('spec/spec_helper.rb', 'w+') do |f|
    f.write <<SPEC_HELPER
ENV['RACK_ENV'] = 'test'

require 'rspec'
require 'capybara/rspec'
require './app'

Capybara.app = App

RSpec.configure do |config|
  config.include Capybara::DSL
end
SPEC_HELPER
end

  # styles
  File.open('public/stylesheets/normalize.css', 'w+') do |f|
    normalize_url = 'https://raw.githubusercontent.com/necolas/normalize.css/master/normalize.css'
    f.write(open(normalize_url).read)
  end

  File.open('public/stylesheets/style.css', 'w+') do |f|
    f.write(open(normalize_url).read)
  end

  # views
  File.open('views/layout.erb', 'w+') do |f|
    f.write <<HTML
<!doctype html>

<html>
  <head>
    <meta charset="utf-8">

    <title>"#{project_name}"</title>

    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link href="/stylesheets/normalize.css" rel="stylesheet" type="text/css" media="all">
    <link href="/stylesheets/style.css" rel="stylesheet" type="text/css" media="all">
  </head>
  <body>
  <header>
    <a href="/">Home</a>
  </header>
    <h1>Hello from Layout.erb!</h1>
    <%= yield %>
  </body>
</html>
HTML
  end

# Index.erb
  File.open('views/index.erb', 'w+') do |f|
  f.write <<INDEX
<h1>Hello from Index!</h1>
INDEX
  end

#Resource 1 New
    File.open('views/resource1/new.erb', 'w+') do |f|
    f.write <<NEW
<h1>Hello from New!</h1>
<form action="/resource/something" method="POST">
  <input type="hidden" name="_method" value="PUT">
  <input type="text" name="desired_param_key" value="desired_param_value">
  <select name="params_key">
    <option value="param_value">
    </option>
  </select>
  <input type="submit" value="Display_on_button">
</form>

<form action="/resource/something" method="POST">
  <input type="hidden" name="_method" value="DELETE">
  <input type="submit" value="Delete">
</form>
NEW
  end

  #Resource 1 Index
  File.open('views/resource1/index.erb', 'w+') do |f|
    f.write <<INDEX
    INDEX
  end

  #Resource 1 Show
  File.open('views/resource1/show.erb', 'w+') do |f|
    f.write <<SHOW
    SHOW
  end

  #Resource 1 Edit
  File.open('views/resource1/edit.erb', 'w+') do |f|
    f.write <<EDIT
    EDIT
  end

    #Resource 1 New
  File.open('views/resource1/edit.erb', 'w+') do |f|
    f.write <<NEW
    NEW
  end

  # Gemfile
  File.open('Gemfile', 'w+') do |f|
    f.write <<GEMFILE
source 'https://rubygems.org'

ruby "#{RUBY_VERSION}"

# Gems used in every environment
gem 'sinatra',  '1.4.5'
gem 'redis',    '3.1.0'
gem 'httparty', '0.13.1'
gem 'sequel'

# only used in development locally
group :development, :test do
  gem 'pry',     '0.10.1'
  gem 'shotgun', '0.9'
end

# gems specific just in the production environment
group :production do
end

group :test do
  gem 'rspec',    '~> 3.0.0'
  gem 'capybara', '~> 2.4.1'
end
GEMFILE
  end

  # config.ru
  File.open('config.ru', 'w+') do |f|
    f.write <<CONFIG
require 'rubygems'
require 'bundler'
require './config/boot'

Bundler.require(:default, ENV['RACK_ENV'])

require './app'
run App
CONFIG
  end

  # app.rb
  File.open('app.rb', 'w+') do |f|
    f.write <<APP
require './controllers/application_controller'

class App < Sinatra::Base

  ########################
  # Routes
  ########################
  get('/') do
    render(:erb, :index)
  end
end

APP
  end

  system('bundle install')

  puts('>> OK!'.white)
  puts(">> Created #{project_name}!".green)
  puts('>> use `bundle exec shotgun -p 3000` from inside the folder to run it!')
  cd(project_name)
end
